import numpy as np


def triangles(start, finish):
    # Вычисляем длины отрезков
    lengths = np.sqrt((finish[:, 0] - start[:, 0]) ** 2 + (finish[:, 1] - start[:, 1]) ** 2)

    # Массив для хранения гипотенуз треугольников
    hypotenuses = []

    # Проходим по каждой паре отрезков и вычисляем гипотенузу для треугольника
    for i in range(len(lengths) - 1):
        # Длина отрезка A (текущий)
        a = lengths[i]
        # Длина отрезка B (следующий)
        b = lengths[i + 1]

        # Определяем координаты для построения треугольников
        x1, y1 = finish[i]
        x2, y2 = start[i + 1]

        # В итоге у нас есть треугольник с вершинами:
        # 1. Конец первого отрезка
        # 2. Начало второго отрезка
        # 3. Начало первого отрезка

        # Расстояние между началом первого и началом второго отрезка
        c = np.sqrt((start[i + 1, 0] - finish[i, 0]) ** 2 + (start[i + 1, 1] - finish[i, 1]) ** 2)

        # Гипотенуза треугольника
        hypotenuse = np.sqrt(a ** 2 + b ** 2 - c ** 2)
        hypotenuses.append(hypotenuse)

    return np.array(hypotenuses)


# Пример использования
start = np.array([[17, 6], [15, 7], [17, -8], [-8, -19],
                  [16, -16], [1, -16], [12, 18], [15, 0]])
finish = np.array([[18, -18], [-19, 7], [-7, -18], [-9, 16],
                   [6, 1], [17, -8], [0, -2], [6, -8]])
print(triangles(start, finish))
